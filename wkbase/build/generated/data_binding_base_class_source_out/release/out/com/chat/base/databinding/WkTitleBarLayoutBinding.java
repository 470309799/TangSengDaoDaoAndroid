// Generated by view binder compiler. Do not edit!
package com.chat.base.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.chat.base.R;
import com.chat.base.ui.components.RadialProgressView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class WkTitleBarLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatImageView backIv;

  @NonNull
  public final View statusBarView;

  @NonNull
  public final TextView subtitleTv;

  @NonNull
  public final RelativeLayout titleBarLayout;

  @NonNull
  public final View titleBottomLinView;

  @NonNull
  public final TextView titleCenterTv;

  @NonNull
  public final LinearLayout titleEndView;

  @NonNull
  public final Button titleRightBtn;

  @NonNull
  public final AppCompatImageView titleRightIv;

  @NonNull
  public final AppCompatImageView titleRightIvLeft;

  @NonNull
  public final LinearLayout titleRightLayout;

  @NonNull
  public final RadialProgressView titleRightLoadingIv;

  @NonNull
  public final TextView titleRightTv;

  private WkTitleBarLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull AppCompatImageView backIv, @NonNull View statusBarView, @NonNull TextView subtitleTv,
      @NonNull RelativeLayout titleBarLayout, @NonNull View titleBottomLinView,
      @NonNull TextView titleCenterTv, @NonNull LinearLayout titleEndView,
      @NonNull Button titleRightBtn, @NonNull AppCompatImageView titleRightIv,
      @NonNull AppCompatImageView titleRightIvLeft, @NonNull LinearLayout titleRightLayout,
      @NonNull RadialProgressView titleRightLoadingIv, @NonNull TextView titleRightTv) {
    this.rootView = rootView;
    this.backIv = backIv;
    this.statusBarView = statusBarView;
    this.subtitleTv = subtitleTv;
    this.titleBarLayout = titleBarLayout;
    this.titleBottomLinView = titleBottomLinView;
    this.titleCenterTv = titleCenterTv;
    this.titleEndView = titleEndView;
    this.titleRightBtn = titleRightBtn;
    this.titleRightIv = titleRightIv;
    this.titleRightIvLeft = titleRightIvLeft;
    this.titleRightLayout = titleRightLayout;
    this.titleRightLoadingIv = titleRightLoadingIv;
    this.titleRightTv = titleRightTv;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static WkTitleBarLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static WkTitleBarLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.wk_title_bar_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static WkTitleBarLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backIv;
      AppCompatImageView backIv = ViewBindings.findChildViewById(rootView, id);
      if (backIv == null) {
        break missingId;
      }

      id = R.id.statusBarView;
      View statusBarView = ViewBindings.findChildViewById(rootView, id);
      if (statusBarView == null) {
        break missingId;
      }

      id = R.id.subtitleTv;
      TextView subtitleTv = ViewBindings.findChildViewById(rootView, id);
      if (subtitleTv == null) {
        break missingId;
      }

      id = R.id.titleBarLayout;
      RelativeLayout titleBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (titleBarLayout == null) {
        break missingId;
      }

      id = R.id.titleBottomLinView;
      View titleBottomLinView = ViewBindings.findChildViewById(rootView, id);
      if (titleBottomLinView == null) {
        break missingId;
      }

      id = R.id.titleCenterTv;
      TextView titleCenterTv = ViewBindings.findChildViewById(rootView, id);
      if (titleCenterTv == null) {
        break missingId;
      }

      id = R.id.titleEndView;
      LinearLayout titleEndView = ViewBindings.findChildViewById(rootView, id);
      if (titleEndView == null) {
        break missingId;
      }

      id = R.id.titleRightBtn;
      Button titleRightBtn = ViewBindings.findChildViewById(rootView, id);
      if (titleRightBtn == null) {
        break missingId;
      }

      id = R.id.titleRightIv;
      AppCompatImageView titleRightIv = ViewBindings.findChildViewById(rootView, id);
      if (titleRightIv == null) {
        break missingId;
      }

      id = R.id.titleRightIvLeft;
      AppCompatImageView titleRightIvLeft = ViewBindings.findChildViewById(rootView, id);
      if (titleRightIvLeft == null) {
        break missingId;
      }

      id = R.id.titleRightLayout;
      LinearLayout titleRightLayout = ViewBindings.findChildViewById(rootView, id);
      if (titleRightLayout == null) {
        break missingId;
      }

      id = R.id.titleRightLoadingIv;
      RadialProgressView titleRightLoadingIv = ViewBindings.findChildViewById(rootView, id);
      if (titleRightLoadingIv == null) {
        break missingId;
      }

      id = R.id.titleRightTv;
      TextView titleRightTv = ViewBindings.findChildViewById(rootView, id);
      if (titleRightTv == null) {
        break missingId;
      }

      return new WkTitleBarLayoutBinding((LinearLayout) rootView, backIv, statusBarView, subtitleTv,
          titleBarLayout, titleBottomLinView, titleCenterTv, titleEndView, titleRightBtn,
          titleRightIv, titleRightIvLeft, titleRightLayout, titleRightLoadingIv, titleRightTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
