// Generated by view binder compiler. Do not edit!
package com.chat.uikit.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.chat.base.ui.components.SwitchView;
import com.chat.uikit.R;
import com.scwang.smart.refresh.layout.SmartRefreshLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActMsgNoticesSetLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final SwitchView newMsgNoticeDetailSwitch;

  @NonNull
  public final SwitchView newMsgNoticeSwitch;

  @NonNull
  public final LinearLayout openNoticeLayout;

  @NonNull
  public final SmartRefreshLayout refreshLayout;

  @NonNull
  public final SwitchView shockSwitch;

  @NonNull
  public final TextView voiceShockDescTv;

  @NonNull
  public final SwitchView voiceSwitch;

  private ActMsgNoticesSetLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull SwitchView newMsgNoticeDetailSwitch, @NonNull SwitchView newMsgNoticeSwitch,
      @NonNull LinearLayout openNoticeLayout, @NonNull SmartRefreshLayout refreshLayout,
      @NonNull SwitchView shockSwitch, @NonNull TextView voiceShockDescTv,
      @NonNull SwitchView voiceSwitch) {
    this.rootView = rootView;
    this.newMsgNoticeDetailSwitch = newMsgNoticeDetailSwitch;
    this.newMsgNoticeSwitch = newMsgNoticeSwitch;
    this.openNoticeLayout = openNoticeLayout;
    this.refreshLayout = refreshLayout;
    this.shockSwitch = shockSwitch;
    this.voiceShockDescTv = voiceShockDescTv;
    this.voiceSwitch = voiceSwitch;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActMsgNoticesSetLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActMsgNoticesSetLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.act_msg_notices_set_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActMsgNoticesSetLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.newMsgNoticeDetailSwitch;
      SwitchView newMsgNoticeDetailSwitch = ViewBindings.findChildViewById(rootView, id);
      if (newMsgNoticeDetailSwitch == null) {
        break missingId;
      }

      id = R.id.newMsgNoticeSwitch;
      SwitchView newMsgNoticeSwitch = ViewBindings.findChildViewById(rootView, id);
      if (newMsgNoticeSwitch == null) {
        break missingId;
      }

      id = R.id.openNoticeLayout;
      LinearLayout openNoticeLayout = ViewBindings.findChildViewById(rootView, id);
      if (openNoticeLayout == null) {
        break missingId;
      }

      id = R.id.refreshLayout;
      SmartRefreshLayout refreshLayout = ViewBindings.findChildViewById(rootView, id);
      if (refreshLayout == null) {
        break missingId;
      }

      id = R.id.shockSwitch;
      SwitchView shockSwitch = ViewBindings.findChildViewById(rootView, id);
      if (shockSwitch == null) {
        break missingId;
      }

      id = R.id.voiceShockDescTv;
      TextView voiceShockDescTv = ViewBindings.findChildViewById(rootView, id);
      if (voiceShockDescTv == null) {
        break missingId;
      }

      id = R.id.voiceSwitch;
      SwitchView voiceSwitch = ViewBindings.findChildViewById(rootView, id);
      if (voiceSwitch == null) {
        break missingId;
      }

      return new ActMsgNoticesSetLayoutBinding((LinearLayout) rootView, newMsgNoticeDetailSwitch,
          newMsgNoticeSwitch, openNoticeLayout, refreshLayout, shockSwitch, voiceShockDescTv,
          voiceSwitch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
