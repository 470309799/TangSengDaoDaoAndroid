// Generated by view binder compiler. Do not edit!
package com.chat.uikit.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.chat.base.views.BubbleLayout;
import com.chat.uikit.R;
import com.chat.uikit.view.CircleProgress;
import com.chat.uikit.view.WaveformView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ChatItemVoiceBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout contentLayout;

  @NonNull
  public final CircleProgress playBtn;

  @NonNull
  public final BubbleLayout voiceLayout;

  @NonNull
  public final TextView voiceTimeTv;

  @NonNull
  public final WaveformView voiceWaveform;

  private ChatItemVoiceBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout contentLayout,
      @NonNull CircleProgress playBtn, @NonNull BubbleLayout voiceLayout,
      @NonNull TextView voiceTimeTv, @NonNull WaveformView voiceWaveform) {
    this.rootView = rootView;
    this.contentLayout = contentLayout;
    this.playBtn = playBtn;
    this.voiceLayout = voiceLayout;
    this.voiceTimeTv = voiceTimeTv;
    this.voiceWaveform = voiceWaveform;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ChatItemVoiceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ChatItemVoiceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.chat_item_voice, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ChatItemVoiceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout contentLayout = (LinearLayout) rootView;

      id = R.id.playBtn;
      CircleProgress playBtn = ViewBindings.findChildViewById(rootView, id);
      if (playBtn == null) {
        break missingId;
      }

      id = R.id.voiceLayout;
      BubbleLayout voiceLayout = ViewBindings.findChildViewById(rootView, id);
      if (voiceLayout == null) {
        break missingId;
      }

      id = R.id.voiceTimeTv;
      TextView voiceTimeTv = ViewBindings.findChildViewById(rootView, id);
      if (voiceTimeTv == null) {
        break missingId;
      }

      id = R.id.voiceWaveform;
      WaveformView voiceWaveform = ViewBindings.findChildViewById(rootView, id);
      if (voiceWaveform == null) {
        break missingId;
      }

      return new ChatItemVoiceBinding((LinearLayout) rootView, contentLayout, playBtn, voiceLayout,
          voiceTimeTv, voiceWaveform);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
