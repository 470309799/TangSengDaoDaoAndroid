// Generated by view binder compiler. Do not edit!
package com.chat.login.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.chat.login.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActInputLoginAuthVerifCodeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton getVerfiCodeBtn;

  @NonNull
  public final TextView sendCodeTv;

  @NonNull
  public final MaterialButton sureBtn;

  @NonNull
  public final AppCompatEditText verfiEt;

  private ActInputLoginAuthVerifCodeBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton getVerfiCodeBtn, @NonNull TextView sendCodeTv,
      @NonNull MaterialButton sureBtn, @NonNull AppCompatEditText verfiEt) {
    this.rootView = rootView;
    this.getVerfiCodeBtn = getVerfiCodeBtn;
    this.sendCodeTv = sendCodeTv;
    this.sureBtn = sureBtn;
    this.verfiEt = verfiEt;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActInputLoginAuthVerifCodeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActInputLoginAuthVerifCodeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.act_input_login_auth_verif_code, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActInputLoginAuthVerifCodeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.getVerfiCodeBtn;
      MaterialButton getVerfiCodeBtn = ViewBindings.findChildViewById(rootView, id);
      if (getVerfiCodeBtn == null) {
        break missingId;
      }

      id = R.id.sendCodeTv;
      TextView sendCodeTv = ViewBindings.findChildViewById(rootView, id);
      if (sendCodeTv == null) {
        break missingId;
      }

      id = R.id.sureBtn;
      MaterialButton sureBtn = ViewBindings.findChildViewById(rootView, id);
      if (sureBtn == null) {
        break missingId;
      }

      id = R.id.verfiEt;
      AppCompatEditText verfiEt = ViewBindings.findChildViewById(rootView, id);
      if (verfiEt == null) {
        break missingId;
      }

      return new ActInputLoginAuthVerifCodeBinding((LinearLayout) rootView, getVerfiCodeBtn,
          sendCodeTv, sureBtn, verfiEt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
